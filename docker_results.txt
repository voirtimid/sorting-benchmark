# Run complete. Total time: 04:19:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark             (size)   Mode  Cnt          Score        Error  Units
SortBenchmark.sort        10  thrpt   25  112344278.814 ± 525078.224  ops/s
SortBenchmark.sort        20  thrpt   25   76167937.576 ± 305652.652  ops/s
SortBenchmark.sort        40  thrpt   25   48411578.011 ± 182206.432  ops/s
SortBenchmark.sort        60  thrpt   25   13751838.887 ±  46102.937  ops/s
SortBenchmark.sort        80  thrpt   25   11475417.936 ±  40804.651  ops/s
SortBenchmark.sort       100  thrpt   25    8931405.492 ±  82782.192  ops/s
SortBenchmark.sort       200  thrpt   25    2801036.163 ±    715.151  ops/s
SortBenchmark.sort       400  thrpt   25    5117362.043 ±    840.396  ops/s
SortBenchmark.sort       600  thrpt   25    3583133.518 ±    606.081  ops/s
SortBenchmark.sort       800  thrpt   25    2757165.489 ±    317.721  ops/s
SortBenchmark.sort      1000  thrpt   25    2240417.405 ±    247.381  ops/s
SortBenchmark.sort      2000  thrpt   25    1157021.875 ±    201.921  ops/s
SortBenchmark.sort      4000  thrpt   25     588171.723 ±     71.571  ops/s
SortBenchmark.sort      6000  thrpt   25     394343.170 ±     53.890  ops/s
SortBenchmark.sort      8000  thrpt   25     296186.433 ±     41.952  ops/s
SortBenchmark.sort     10000  thrpt   25     236934.982 ±    648.140  ops/s
SortBenchmark.sort     20000  thrpt   25     119103.213 ±     12.869  ops/s
SortBenchmark.sort     40000  thrpt   25      59665.089 ±     22.329  ops/s
SortBenchmark.sort     60000  thrpt   25      38779.472 ±   1546.392  ops/s
SortBenchmark.sort     80000  thrpt   25      28968.209 ±   1308.281  ops/s
SortBenchmark.sort    100000  thrpt   25      23161.123 ±   1044.948  ops/s
SortBenchmark.sort    200000  thrpt   25       9829.790 ±    546.978  ops/s
SortBenchmark.sort    400000  thrpt   25       5196.959 ±      4.695  ops/s
SortBenchmark.sort    600000  thrpt   25       3508.531 ±      0.561  ops/s
SortBenchmark.sort    800000  thrpt   25       2632.283 ±      0.518  ops/s
SortBenchmark.sort   1000000  thrpt   25       2042.792 ±     96.457  ops/s
SortBenchmark.sort   2000000  thrpt   25        895.316 ±      0.560  ops/s
SortBenchmark.sort   4000000  thrpt   25        446.722 ±      0.183  ops/s
SortBenchmark.sort   6000000  thrpt   25        292.796 ±      0.579  ops/s
SortBenchmark.sort   8000000  thrpt   25        213.761 ±      0.446  ops/s
SortBenchmark.sort  10000000  thrpt   25        166.851 ±      0.511  ops/s
